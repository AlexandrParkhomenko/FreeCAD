/***************************************************************************
 *   Copyright (c) JÃ¼rgen Riegel          (juergen.riegel@web.de) 2007     *
 *   FreeCAD LICENSE IS LGPL3 WITHOUT ANY WARRANTY                         *
 ***************************************************************************/


#include "Writer.h"
#include "Persistence.h"
#include <boost/iostreams/device/array.hpp>
#include <boost/iostreams/stream.hpp>

// inclution of the generated files (generated By PersitancePy.xml)
#include "PersistencePy.h"
#include "PersistencePy.cpp"

using namespace Base;

// returns a string which represent the object e.g. when printed in python
std::string PersistencePy::representation(void) const
{
    return std::string("<persistence object>");
}


Py::String PersistencePy::getContent(void) const
{
    Base::StringWriter writer;
    // force all objects to write pure XML without files
    writer.setForceXML(true);
    getPersistencePtr()->Save(writer);

    return  Py::String (writer.getString());
}

Py::Int PersistencePy::getMemSize(void) const
{
    return Py::Int((long)getPersistencePtr()->getMemSize());
}

PyObject *PersistencePy::getCustomAttributes(const char*) const
{
    return 0;
}

int PersistencePy::setCustomAttributes(const char*,PyObject*)
{
    return 0; 
}

